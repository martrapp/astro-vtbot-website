---
import StarlightHead from '@astrojs/starlight/components/Head.astro';
import type { Props } from '@astrojs/starlight/props';
import { ViewTransitions } from 'astro:transitions';

import LoadingIndicator from 'astro-vtbot/components/LoadingIndicator.astro';
import ReplacementSwap from 'astro-vtbot/components/ReplacementSwap.astro';

import CloseMenu from './CloseMenu.astro';
import PagefindToTextFragments from './PagefindToTextFragments.astro';
import SidebarSelect from './SidebarSelect.astro';
import '../../styles/vt.css';
import MarkHeadings from '../bot/MarkHeadings.astro';
import OrderedPages from '../bot/OrderedPages.astro';
import ScrollY from '../bot/ScrollY.astro';
import SilentCatch from '../bot/SilentCatch.astro';
import SwapSound from '../bot/SwapSound.astro';
import ReloadFence from '../bot/ReloadFence.astro';
---

<StarlightHead {...Astro.props} />
<ViewTransitions />
<ReloadFence />
<ReplacementSwap rootAttributesToPreserve="data-theme" />
<LoadingIndicator top="9vh" right="3vw" src="/favicon.svg" />
<MarkHeadings />
<OrderedPages />
<ScrollY />
<PagefindToTextFragments />
<SidebarSelect />
<CloseMenu />
<SwapSound src="/swoosh-6428.mp3" />
<SilentCatch />

<script>
	import {
		TRANSITION_BEFORE_PREPARATION,
		isTransitionBeforePreparationEvent,
	} from 'astro:transitions/client';

	import '../navigate';
	import '../iframe-theme';

	function markMainFrameForReplacement(doc: Document) {
		doc.body.querySelector('.main-frame')!.setAttribute('data-vtbot-replace', 'main');
	}
	document.addEventListener(TRANSITION_BEFORE_PREPARATION, (e) => {
		if (isTransitionBeforePreparationEvent(e)) {
			const originalLoader = e.loader;
			e.loader = async () => {
				await originalLoader();
				markMainFrameForReplacement(e.newDocument);
			};
		}
	});
	markMainFrameForReplacement(document);
</script>
