---

---

<script>
	import { mayStartViewTransition } from '@vtbag/utensil-drawer/may-start-view-transition';

	document.addEventListener('astro:page-load', () => {
		const carsel = document.querySelector('div.carsel');
		if (!carsel) return;
		const tilesWrapper = carsel.querySelector('.tiles-wrapper')!;
		const prevButton = carsel.querySelector('.prev-button')!;
		const nextButton = carsel.querySelector('.next-button')!;
		const options = carsel.querySelector('.options') as HTMLSelectElement;

		[...tilesWrapper.children].forEach(
			(t, idx) => ((t as HTMLElement).style.transform = `translate(${idx * 2}px, ${idx * 2}px)`)
		);

		const assignNames = (tiles: HTMLElement[]) => {
			tiles.forEach((t, idx) => {
				t.style.viewTransitionName = `carsel-${idx}`;
			});
		};

		['click'].forEach((e) =>
			prevButton.addEventListener(e, () => {
				assignNames([...tilesWrapper.children] as HTMLElement[]);
				mayStartViewTransition(
					{
						types: ['carsel', 'up'],
						update: () => {
							const last = tilesWrapper.lastElementChild!;
							tilesWrapper.children[2]!.insertAdjacentElement('afterend', last);
							last.insertAdjacentElement('afterend', tilesWrapper.firstElementChild!);
						},
					},
					{
						collisionBehavior: options.value === 'off' ? 'never' : 'chaining',
						speedUpWhenChained: 1.5,
					}
				).ready.finally(() => {
					[...tilesWrapper.children].forEach(
						(t) => ((t as HTMLElement).style.viewTransitionClass = '')
					);
				});
			})
		);

		['click'].forEach((e) =>
			nextButton.addEventListener(e, () => {
				assignNames([...tilesWrapper.children] as HTMLElement[]);
				mayStartViewTransition(
					{
						types: ['carsel', 'down'],
						update: () => {
							(tilesWrapper.children[0] as HTMLElement).style.viewTransitionClass = 'carsel';
							(tilesWrapper.children[1] as HTMLElement).style.viewTransitionClass = 'carsel';
							(tilesWrapper.children[2] as HTMLElement).style.viewTransitionClass = 'carsel';
							tilesWrapper.insertAdjacentElement('afterbegin', tilesWrapper.children[3]!);
							tilesWrapper.insertAdjacentElement('beforeend', tilesWrapper.children[3]!);
						},
					},
					{
						collisionBehavior: options.value === 'off' ? 'never' : 'chaining',
						speedUpWhenChained: 1.5,
					}
				).ready.finally(() => {
					[...tilesWrapper.children].forEach(
						(t) => ((t as HTMLElement).style.viewTransitionClass = '')
					);
				});
			})
		);
	});
</script>

<style is:inline>
	:active-view-transition-type(carsel) {
		*:not(div.carsel *) {
			view-transition-name: none !important;
		}
		view-transition-name: none !important;

		&::view-transition-group(*) {
			animation-duration: 0.25s;
			animation-timing-function: ease-in;
		}
		&::view-transition {
			pointer-events: none !important;
		}
		&::view-transition-group(.carsel) {
			z-index: 1;
		}
		&::view-transition-group(*) {
			animation-delay: 50ms;
		}
		&::view-transition-group(carsel-0),
		&::view-transition-group(carsel-3) {
			animation-delay: 30ms;
		}
		&::view-transition-group(carsel-2) {
			animation-delay: 0ms;
		}

		&::view-transition-old(*),
		&::view-transition-new(*) {
			animation-name: none;
		}
	}

	div.carsel {
		margin-inline: auto;
		display: flex;
		flex-direction: column;
		max-width: min(100vw, 400px);
		align-items: center;
		gap: 1.5rem;
		padding: 2rem 1rem;
		user-select: none;

		--font-family: sans-serif;
		--line-height: 1.5;
		--font-weight-normal: 400;
		--font-weight-medium: 500;
		--font-weight-bold: 700;

		--color-text: light-dark(#1a1a1a, #f8f9fa);
		--color-secondary: var(--sl-color-gray-3);
		--color-card-bg: light-dark(#ffffff, #081018);
		--color-card-shadow: rgba(0, 0, 0, 0.1);
		--color-button-bg: light-dark(#ffffff, #103050);
		--color-button-text: light-dark(#1a1a1a, #f8f9fa);
		--color-button-border: rgba(0, 0, 0, 0.1);
		--color-button-hover: light-dark(#f2f2f2, #333333);
	}

	.tiles-wrapper {
		display: grid;
		grid-template-columns: 1fr;
		gap: 1.5rem;
		overflow: visible;
		width: 100%;
	}

	.tile {
		background-color: var(--color-card-bg);
		border-radius: 16px;
		box-shadow: 4px 4px 8px #8884;
		border: 1px dotted #8884;
		padding: 1rem;
		width: 95%;
		height: 150px;
		display: flex;
		flex-direction: row;
		align-items: center;
		text-align: center;
		padding: 0.5rem 1rem;
		transition: transform 0.2s ease;
		margin-inline: auto;
	}

	.tile:hover {
		transform: translateY(-4px);
	}

	.emoji {
		font-size: 2rem;
		margin-bottom: 1rem;
		line-height: 1;
	}

	.tile-title {
		font-size: 1rem;
		flex: 2;
		font-weight: var(--font-weight-bold);
		margin-bottom: 0.75rem;
		color: var(--color-text);
	}

	.tile-description {
		flex: 3;
		font-size: 1rem;
		color: var(--color-secondary);
		line-height: 1.5;
	}

	.nav-button {
		background-color: var(--color-button-bg);
		border: 1px solid var(--color-button-border);
		color: var(--color-button-text);
		width: 3.5rem;
		aspect-ratio: 1 / 1;
		border-radius: 50%;
		display: flex;
		align-items: center;
		justify-content: center;
		cursor: pointer;
		box-shadow: 0 4px 12px var(--color-card-shadow);
		z-index: 10;
		transform: rotate(90deg);
	}

	.nav-button:hover {
		background-color: var(--color-button-hover);
	}

	.next-button {
		margin-top: 1rem;
	}
	.arrow {
		font-size: 1.5rem;
		line-height: 1;
	}
	select {
		border-radius: 8px 8px 0 0;
	}

	@media (max-width: 768px) {
		.emoji {
			font-size: 3.5rem;
		}

		.tile-title {
			font-size: 1.25rem;
		}

		.tile-description {
			font-size: 0.875rem;
		}

		.nav-button {
			width: 3rem;
			height: 3rem;
		}
	}

	@media (max-width: 480px) {
		div.carsel {
			padding: 1rem 0.5rem;
		}

		.tiles-wrapper {
			gap: 1rem;
		}

		.tile {
			padding: 1.5rem;
		}
	}

	.tile {
		grid-area: 3 / 1 / 4 / 1;
	}
	.tile:nth-child(1),
	.tile:nth-child(2) {
		grid-area: 1 / 1 / 2 / 1;
	}
	.tile:nth-child(3) {
		grid-area: 2 / 1 / 3 / 1;
	}

	::view-transition {
		pointer-events: none !important;
	}
</style>

<div class="carsel not-content">
	<button class="nav-button prev-button" aria-label="Previous tiles">
		<span class="arrow">&#10094;</span>
	</button>

	<div class="tiles-wrapper"><slot /></div>

	<button class="nav-button next-button" aria-label="Next tiles">
		<span class="arrow">&#10095;</span>
	</button>
	<label
		>View transitions:
		<select class="options" aria-label="Options">
			<option value="auto">Auto</option>
			<option value="off">Off</option>
			<!--option value="auto">Auto</option-->
		</select>
	</label>
</div>
