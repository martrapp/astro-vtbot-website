---
export interface Props {
	src: string;
}
const { src } = Astro.props;
---

<meta name="vtbot-swap-sound" content={src} />
<script>
	import {
		isTransitionBeforeSwapEvent,
		TRANSITION_BEFORE_PREPARATION,
		TRANSITION_BEFORE_SWAP,
	} from 'astro:transitions/client';

	const meta: HTMLMetaElement | null = document.head.querySelector("meta[name='vtbot-swap-sound']");
	if (!meta) {
		console.error('[vtbot] SwapSound must be inserted into the <head> of your document');
	} else {
		const audio = document.createElement('audio');
		audio.id = 'vtbot-swap-sound';
		audio.src = meta.content;
		audio.preload = 'auto';
		audio.dataset.astroTransitionPersist = 'vtbot-swap-sound';
		document.body.appendChild(audio);
	}

	document.addEventListener(TRANSITION_BEFORE_PREPARATION, () => {
		const audio = document.querySelector('#vtbot-swap-sound') as HTMLAudioElement;
		audio?.load();
		audio?.play().catch(() => {
			// ignore
		});
	});
	document.addEventListener(TRANSITION_BEFORE_SWAP, (e) => {
		if (isTransitionBeforeSwapEvent(e)) {
			e.viewTransition.finished.then(() => {
				const mySound = document.querySelector('#vtbot-swap-sound') as HTMLAudioElement;
				mySound?.pause();
			});
		}
	});
</script>
