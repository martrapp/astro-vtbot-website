---

---

<div class="vtbot-lightbox">
	<div class="vtbot-lightbox-main">
		<div class="vtbot-lightbox-content">
			<slot />
		</div>
		<div class="vtbot-lightbox-caption">
			<slot name="caption" />
		</div>
	</div>
	<dialog class="vtbot-lightbox-dialog">
		<div class="vtbot-lightbox-display">
			<div class="vtbot-lightbox-caption">
				<slot name="caption" />
			</div>
		</div>
	</dialog>
</div>
<script>
	import { mayStartViewTransition } from '@vtbag/utensil-drawer/may-start-view-transition';
	document.querySelectorAll<HTMLDivElement>('.vtbot-lightbox').forEach((lb) => {
		lb.addEventListener('click', (_) => {
			document.documentElement.classList.add('vtbot-lightbox-active');
			const main = lb.firstElementChild as HTMLDivElement;
			const dialog = main.nextElementSibling as HTMLDialogElement;
			const original = main.getBoundingClientRect();
			lb.classList.remove('open', 'closed');
			lb.classList.add(dialog.open ? 'open' : 'closed');
			let content: HTMLDivElement;
			mayStartViewTransition(() => {
				if (!dialog.open) {
					content = main.firstElementChild as HTMLDivElement;
					const display = dialog.firstElementChild as HTMLDivElement;
					main.style.width = `${original.width}px`;
					main.style.height = `${original.height}px`;
					display.insertAdjacentElement('afterbegin', content);
					const contentRatio = original.width / original.height;
					const viewportRatio = innerWidth / innerHeight;
					if (viewportRatio > contentRatio) {
						content.style.height = '90%';
						content.style.width = 'fit-content';
					} else {
						content.style.width = 'fi-content';
						content.style.height = '90%';
					}
					lb.classList.remove('closed');
					lb.classList.add('open');
					dialog.showModal();
				} else {
					const display = dialog.firstElementChild as HTMLDivElement;
					content = display.firstElementChild as HTMLDivElement;
					main.style.width = '';
					main.style.height = '';
					main.insertAdjacentElement('afterbegin', content);
					lb.classList.remove('open');
					lb.classList.add('closed');
					dialog.close();
				}
			}).ready.then(() => {
				content.style.width = content.style.height = '';
				document.documentElement.classList.remove('vtbot-lightbox-active');
				lb.classList.remove('open', 'closed');
			});
		});
	});
</script>

<style is:inline>
	::view-transition-old(vtbot-lightbox),
	::view-transition-new(vtbot-lightbox) {
		width: 100%;
		height: 100%;
	}
	.vtbot-lightbox {
		width: fit-content;
		margin-inline: auto;
	}

	:root.vtbot-lightbox-active,
	:root.vtbot-lightbox-active *:not(:is(.vtbot-lightbox.closed *, .vtbot-lightbox.open *)) {
		view-transition-name: none !important;
	}
	.vtbot-lightbox.open .vtbot-lightbox-dialog {
		view-transition-name: vtbot-lightbox;
	}
	.vtbot-lightbox.closed .vtbot-lightbox-main {
		view-transition-name: vtbot-lightbox;
	}
	.vtbot-lightbox-dialog {
		margin-inline: auto;
		margin-block: auto;
		width: fit-content;
		height: fit-content;
	}
	.vtbot-lightbox-display {
		display: flex;
		flex-direction: column;
		align-items: center;
		justify-content: center;
	}
</style>
