---
// see https://developer.mozilla.org/en-US/docs/Web/API/View_Transitions_API#controlling_animations_with_javascript
---

<meta name="vtbot-circular" content="true" />
<script>
	import { TRANSITION_BEFORE_SWAP, isTransitionBeforeSwapEvent } from 'astro:transitions/client';

	const enabled = () => !!document.querySelector('meta[name="vtbot-circular"]');

	// Store the last click event
	let lastClick: MouseEvent;

	function beforeSwap(beforeSwapEvent: Event) {
		if (enabled() && isTransitionBeforeSwapEvent(beforeSwapEvent)) {
			// Get the click position, or fallback to the middle of the screen
			const x = lastClick?.clientX ?? innerWidth / 2;
			const y = lastClick?.clientY ?? innerHeight / 2;

			// Get the distance to the furthest corner
			const endRadius = Math.hypot(Math.max(x, innerWidth - x), Math.max(y, innerHeight - y));

			// Wait for the pseudo-elements to be created:
			beforeSwapEvent.viewTransition.ready
				.then(() => {
					// Animate the rootâ€™s new view
					document.documentElement.animate(
						{
							clipPath: [`circle(0 at ${x}px ${y}px)`, `circle(${endRadius}px at ${x}px ${y}px)`],
						},
						{
							duration: 1500,
							easing: 'ease-in',
							// Specify which pseudo-element to animate
							pseudoElement: !!document.startViewTransition
								? '::view-transition-new(root)'
								: undefined, // for browsers that do not yet support the API
						} as KeyframeAnimationOptions
					);
				})
				.catch(() => {});
		}
	}
	document.addEventListener(TRANSITION_BEFORE_SWAP, beforeSwap);
	addEventListener('click', (event) => (lastClick = event));
</script>
<style is:global>
	::view-transition-image-pair(root) {
		isolation: auto;
	}

	::view-transition-old(root),
	::view-transition-new(root) {
		animation: none;
		mix-blend-mode: normal;
	}
</style>
